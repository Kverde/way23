"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[816],{97640:(n,e,a)=>{a.r(e),a.d(e,{data:()=>t});const t={key:"v-fa98267e",path:"/%D0%BF%D0%BE%D0%B8%D1%81%D0%BA-%D0%BF%D0%B5%D1%80%D0%B8%D0%BE%D0%B4%D0%B0-%D0%BF%D0%B8%D0%B7%D0%B0%D0%BD%D0%BE.html",title:"Поиск периода Пизано",lang:"ru-RU",frontmatter:{title:"Поиск периода Пизано",date:"2017-08-06",categories:["Алгоритмы"],tags:["Python","фибоначчи"]},excerpt:"",headers:[{level:2,title:"Решение",slug:"решение",children:[]}],filePathRelative:"поиск-периода-пизано.md",git:{updatedTime:1692859375e3}}},37602:(n,e,a)=>{a.r(e),a.d(e,{default:()=>g});var t=a(66252),i=a(3577);const l={id:"frontmatter-title",tabindex:"-1"},r=(0,t._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),p=(0,t._)("p",null,"Даны целые числа [latex]1 \\leq n \\leq 10^{18}[/latex] и [latex]2 \\leq m \\leq 10^5[/latex], необходимо найти остаток от деления n-го числа Фибоначчи на m.",-1),o=(0,t._)("h2",{id:"решение",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#решение","aria-hidden":"true"},"#"),(0,t.Uk)(" Решение")],-1),s=(0,t.Uk)("Последовательность остатков при делении чисел Фибоначчи на натуральное число периодична. "),D={href:"https://ru.wikipedia.org/wiki/%D0%9F%D0%B5%D1%80%D0%B8%D0%BE%D0%B4_%D0%9F%D0%B8%D0%B7%D0%B0%D0%BD%D0%BE",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("Период Пизано"),u=(0,t.Uk)(" - это длина периода этой последовательности."),B=(0,t._)("p",null,"Для нахождения остатка от деления n-го числа Фибоначчи на натуральное число m достаточно найти все числа периода Пизано для данного m, затем найти остаток от деления n на длину периода, и взять число из периода Пизано под этим номером.",-1),f=(0,t._)("p",null,"Саму последовательность Фибоначчи можно не вычислять, для нахождения периода использовать только остатки.",-1),m=(0,t._)("p",null,"Первые числа в периоде Пизано - 0 и 1. Длина периода не больше m * 6 (доказательство этого не нашёл).",-1),h=(0,t._)("p",null,"n, m = [int(x) for x in input().split()]",-1),_=(0,t._)("p",null,"def find_pisano(n, m): pisano = [] pisano.append(0)",-1),c=(0,t._)("pre",null,[(0,t._)("code",null,"# при делении на 1 остаток будет всегда 0\nif m == 1:\n    return pisano\n\npisano.append(1)\n\n# при m > 0 остатки от деления первого и второго числа Фибоначчи\n# всегда 0 и 1\nif n <= 1:\n    return pisano\n\nn0 = 0\nn1 = 1\nfor \\_\\_ in range(m \\* 6):\n    # для ускорения не вычисляем числа Фибоначчи полностью\n    # берём только остатки по модулю m\n    n0, n1 = n1, (n0 + n1) % m\n\n    pisano.append(n1 % m)\n\n    # Проверяем не начался ли новый период \n    # период всегда начинается с 0 и 1\n    if pisano\\[len(pisano) - 1\\] == 1 \\\\\n        and pisano\\[len(pisano) - 2\\] == 0:\n        break\n\nreturn pisano\\[:-2\\]\n")],-1),k=(0,t._)("p",null,"pisano = find_pisano(n, m) print(pisano) print(pisano[n % len(pisano)])",-1),g={render:function(n,e){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t._)("h1",l,[r,(0,t.Uk)(" "+(0,i.zw)(n.$frontmatter.title),1)]),p,o,(0,t._)("p",null,[s,(0,t._)("a",D,[d,(0,t.Wm)(a)]),u]),B,f,m,h,_,c,k],64)}}}}]);