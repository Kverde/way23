"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[4690],{3621:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-ab62c0a4",path:"/%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B0-xml-%D0%BF%D0%BE-xsd-%D0%BD%D0%B0-python-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-lxml.html",title:"Проверка xml по xsd на Python через lxml",lang:"ru-RU",frontmatter:{title:"Проверка xml по xsd на Python через lxml",date:"2020-01-23",categories:["Python"],tags:["Python","xml","xsd"]},excerpt:"",headers:[],filePathRelative:"проверка-xml-по-xsd-на-python-через-lxml.md",git:{updatedTime:1692859375e3}}},75018:(n,s,a)=>{a.r(s),a.d(s,{default:()=>b});var e=a(66252),t=a(3577);const p={id:"frontmatter-title",tabindex:"-1"},l=(0,e._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),r=(0,e.Uk)("В библиотеке "),o={href:"https://lxml.de/index.html",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("lxml"),i=(0,e.Uk)(" содержаться "),m={href:"https://lxml.de/validation.html",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("функции для проверки xml по xsd"),d=(0,e.Uk)(". Пример кода:"),k=(0,e.uE)('<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree\n\n<span class="token comment"># Загрузка xsd схемы</span>\nxsd_file_name <span class="token operator">=</span> <span class="token string">r&#39;schema.xsd&#39;</span>\nschema_root <span class="token operator">=</span> etree<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>xsd_file_name<span class="token punctuation">)</span>\nschema <span class="token operator">=</span> etree<span class="token punctuation">.</span>XMLSchema<span class="token punctuation">(</span>schema_root<span class="token punctuation">)</span>\n\n<span class="token comment"># Загрузка xml</span>\n\nxml_filename <span class="token operator">=</span> <span class="token string">&#39;file.xml&#39;</span>\nxml <span class="token operator">=</span> etree<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>xml_filename<span class="token punctuation">)</span>\n\n<span class="token comment"># Проверка</span>\n\n<span class="token keyword">if</span> <span class="token keyword">not</span> schema<span class="token punctuation">.</span>validate<span class="token punctuation">(</span>xml<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>schema<span class="token punctuation">.</span>error_log<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>Метод <code>validate</code> возвращает <code>False</code> если xml не проходит проверку по схеме. Свойство <code>error_log</code> содержит список несоответствий xml схеме из xsd.</p>',2),b={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[(0,e._)("h1",p,[l,(0,e.Uk)(" "+(0,t.zw)(n.$frontmatter.title),1)]),(0,e._)("p",null,[r,(0,e._)("a",o,[c,(0,e.Wm)(a)]),i,(0,e._)("a",m,[u,(0,e.Wm)(a)]),d]),k],64)}}}}]);