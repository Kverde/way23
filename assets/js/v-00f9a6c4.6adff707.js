"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[1934],{83422:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-00f9a6c4",path:"/%D1%81%D1%85%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D0%BE-%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D0%BE%D0%B3%D0%BE-%D1%81%D1%82%D0%B8%D0%BB%D1%8F-%D0%B8-%D0%BF%D1%80%D0%BE.html",title:"Сходство информационного стиля и программного кода",lang:"ru-RU",frontmatter:{title:"Сходство информационного стиля и программного кода",date:"2019-10-23",categories:["Книги"],tags:["совершенный-код","тексты"]},excerpt:"",headers:[{level:2,title:"Стоп-слова",slug:"стоп-слова",children:[]},{level:2,title:"Структура",slug:"структура",children:[]},{level:2,title:"Модуль",slug:"модуль",children:[]}],filePathRelative:"сходство-информационного-стиля-и-про.md",git:{updatedTime:1692859375e3}}},80724:(e,n,a)=>{a.r(n),a.d(n,{default:()=>m});var s=a(66252),l=a(3577);const r={id:"frontmatter-title",tabindex:"-1"},t=(0,s._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),p=(0,s.Uk)("Правила информационного стиля из книги "),i={href:"https://book.glvrd.ru/",target:"_blank",rel:"noopener noreferrer"},u=(0,s.Uk)("Пиши-сокращай"),d=(0,s.Uk)(" похожи на принципы написания хорошего кода. Источник сходства в единой основе кода, статей и книг — в тексте предназначенном в первую очередь для чтения."),c=(0,s._)("h2",{id:"стоп-слова",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#стоп-слова","aria-hidden":"true"},"#"),(0,s.Uk)(" Стоп-слова")],-1),o=(0,s.Uk)("Тексты в информационном стиле не содержат "),D={href:"https://way23.ru/%D0%BF%D0%B8%D1%88%D0%B8-%D1%81%D0%BE%D0%BA%D1%80%D0%B0%D1%89%D0%B0%D0%B9-%D0%BE%D1%82%D0%B6%D0%B0%D1%82%D1%8C-%D0%B2%D0%BE%D0%B4%D1%83/",target:"_blank",rel:"noopener noreferrer"},b=(0,s.Uk)("лишних слов"),h=(0,s.Uk)(". Редактор целенаправленно ищет и удаляет лишние слова и конструкции."),B=(0,s.uE)('<p>Существуют конструкции нежелательные на любом языке программирования, такие как сравнение с логической переменной и присвоение <strong>True</strong> и <strong>False</strong>:</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>if Value then\n  Result := True\nelse\n  Result := False;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Опытный разработчик заменяет такую конструкцию одной строкой:</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>Result := Value;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="структура" tabindex="-1"><a class="header-anchor" href="#структура" aria-hidden="true">#</a> Структура</h2><p>Писатель делит текст на абзацы. Абзацы структурируют текст. Структурированный текст проще читать.</p><p>Разработчики разделяют команды на логические блоки пустыми строками:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nb <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">if</span> a <span class="token operator">=</span> b<span class="token punctuation">:</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Для выделения уровня вложенности используют отступы:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>if Field.IsNull then\n  Field.Value := 1\nelse\n  Field.Value := 2;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="модуль" tabindex="-1"><a class="header-anchor" href="#модуль" aria-hidden="true">#</a> Модуль</h2><p>Писатель делит статью на части. Каждая часть обозначается информативным заголовком. Каждая часть описывает отдельную тему, законченную сложную мысль. Внутри части абзацы связаны друг с другом, но снаружи отдельная часть не имеет жёстких связей с другими частями. Части можно перемещать относительно друг друга, а в некоторых случаях даже вырезать в другие статьи.</p><p>Разработчик делит программу на функции и модули. Функциям и модулям даются информативные названия. Функции и модули имеют определённое назначение. Модули имеют высокую связность внутри и низкую снаружи — с другими модулями. Как модули так и функции подразумевают возможность повторного использования.</p>',13),m={render:function(e,n){const a=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("h1",r,[t,(0,s.Uk)(" "+(0,l.zw)(e.$frontmatter.title),1)]),(0,s._)("p",null,[p,(0,s._)("a",i,[u,(0,s.Wm)(a)]),d]),c,(0,s._)("p",null,[o,(0,s._)("a",D,[b,(0,s.Wm)(a)]),h]),B],64)}}}}]);