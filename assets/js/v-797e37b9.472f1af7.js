"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[1124],{78923:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-797e37b9",path:"/linux-sed.html",title:"Потоковый текстовый редактор sed",lang:"ru-RU",frontmatter:{title:"Потоковый текстовый редактор sed",date:"2023-12-21",categories:["Linux"],tags:["sed"]},excerpt:"",headers:[{level:2,title:"Ссылки",slug:"ссылки",children:[]}],filePathRelative:"linux-sed.md",git:{updatedTime:1703165027e3}}},69357:(n,s,e)=>{e.r(s),e.d(s,{default:()=>d});var a=e(66252),r=e(3577);const l={id:"frontmatter-title",tabindex:"-1"},i=(0,a._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),t=(0,a.uE)('<p>Стандартный способ запуска редактор <code>sed</code> с указанием скрипта и входного файла. Можно указать несколько файлов в этом случае они будут соединены и операции с ними будут происходить как с одним большим файлом. Результаты команда отправляет в <code>stdout</code>.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>user@debian-server:~/test$ <span class="token function">cat</span> file.txt \nfirst line\nsecond line\nthird line\nuser@debian-server:~/test$ <span class="token function">sed</span> s/line/LINE/ file.txt \nfirst LINE\nsecond LINE\nthird LINE\nuser@debian-server:~/test$ <span class="token function">cat</span> file.txt \nfirst line\nsecond line\nthird line\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>С опцией <code>-i</code> команда <code>sed</code> изменит входной файл.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>user@debian-server:~/test$ <span class="token function">sed</span> -i s/line/LINE/ file.txt \nuser@debian-server:~/test$ <span class="token function">cat</span> file.txt \nfirst LINE\nsecond LINE\nthird LINE\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Скрипт <code>sed</code> поддерживает разные команды. Команда <code>s</code> — замена текста с помощью регулярных выражений, её полный синтаксис следующий <code>s/regexp/replacement/flags</code>. По умолчанию команда <code>s</code> заменяет только первое вхождение в строке, а с флагом <code>g</code> — все вхождения.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>user@debian-server:~/test$ <span class="token function">cat</span> file.txt \nfirst LINE LINE\nsecond LINE LINE\nthird LINE LINE\nuser@debian-server:~/test$ <span class="token function">sed</span> s/LINE/line/ file.txt \nfirst line LINE\nsecond line LINE\nthird line LINE\nuser@debian-server:~/test$ <span class="token function">sed</span> s/LINE/line/g file.txt \nfirst line line\nsecond line line\nthird line line\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Команда <code>d</code> удаляет строки из входного потока.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>user@debian-server:~/test$ <span class="token function">sed</span> 2d file.txt \nfirst LINE LINE\nthird LINE LINE\nuser@debian-server:~/test$ <span class="token function">sed</span> <span class="token number">2</span>,3d file.txt \nfirst LINE LINE\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Команда <code>a</code> добавляет текст после указанной строки.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>user@debian-server:~/test$ <span class="token function">sed</span> <span class="token string">&#39;2a\\  subline&#39;</span> file.txt \nfirst LINE LINE\nsecond LINE LINE\n  subline\nthird LINE LINE\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Редактор <code>sed</code> поддерживает другие сложные возможности: сложные замены с регулярными выражениями, условные конструкции.</p><h2 id="ссылки" tabindex="-1"><a class="header-anchor" href="#ссылки" aria-hidden="true">#</a> Ссылки</h2>',12),c={href:"https://www.gnu.org/software/sed/manual/sed.html#sed-commands-list",target:"_blank",rel:"noopener noreferrer"},p=(0,a.Uk)("Documentation: sed, a stream editor"),d={render:function(n,s){const e=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[(0,a._)("h1",l,[i,(0,a.Uk)(" "+(0,r.zw)(n.$frontmatter.title),1)]),t,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("a",c,[p,(0,a.Wm)(e)])])])],64)}}}}]);