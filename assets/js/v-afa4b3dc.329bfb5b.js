"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[6673],{59586:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-afa4b3dc",path:"/%D0%B8%D0%B7%D0%BC%D0%B5%D0%BD%D1%8F%D0%B5%D0%BC%D1%8B%D0%B5-%D0%B8-%D0%BD%D0%B5%D0%B8%D0%B7%D0%BC%D0%B5%D0%BD%D1%8F%D0%B5%D0%BC%D1%8B%D0%B5-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%8B-%D0%B2-python.html",title:"Изменяемые и неизменяемые объекты в Python",lang:"ru-RU",frontmatter:{title:"Изменяемые и неизменяемые объекты в Python",date:"2020-02-25",categories:["Python"],tags:["Python","перевод"]},excerpt:"",headers:[{level:2,title:"Функции id и type",slug:"функции-id-и-type",children:[]},{level:2,title:"Изменяемые и неизменяемые объекты",slug:"изменяемые-и-неизменяемые-объекты",children:[]},{level:2,title:"Исключения в неизменяемости",slug:"исключения-в-неизменяемости",children:[]},{level:2,title:"Как объекты передаются в функции",slug:"как-объекты-передаются-в-функции",children:[]}],filePathRelative:"изменяемые-и-неизменяемые-объекты-в-python.md",git:{updatedTime:1692859375e3}}},21382:(n,s,a)=>{a.r(s),a.d(s,{default:()=>d});var p=a(66252),e=a(3577);const t={id:"frontmatter-title",tabindex:"-1"},o=(0,p._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),c=(0,p.Uk)("Перевод статьи "),l={href:"https://medium.com/@meghamohan/mutable-and-immutable-side-of-python-c2145cf72747",target:"_blank",rel:"noopener noreferrer"},i=(0,p.Uk)("Mutable vs Immutable Objects in Python"),u=(0,p.Uk)("."),r=(0,p.uE)('<p>Все значения в Python это объекты. Объекты делятся на изменяемые и неизменяемые.</p><p><img src="images/python_immutable_01.png" alt="Python, схема объектов"></p><p>Каждая переменная ссылается на экземпляр объекта. При создании, объекту присваивается уникальный идентификатор (object id) и тип объекта. Тип объекта не меняется после создания, но может изменится состояние объекта. Изменяемые объекты меняют своё состояние после создания, а неизменяемые сохраняются в том виде в котором были созданы.</p><p>Встроенные неизменяемые типы: <code>int</code>, <code>float</code>, <code>bool</code>, <code>str</code>, <code>tuple</code>, <code>unicode</code>. Встроенные изменяемые типы <code>list</code>, <code>set</code>, <code>dict</code>. Пользовательские классы обычно изменяемы. Для имитирования неизменяемости переопределите методы изменения и удаления значений чтобы они возвращали исключение.</p><p><img src="images/python_immutable_02.png" alt="Python. таблица изменяемых и неизменяемых объектов"></p><p>Чтобы узнать ссылается ли переменная на изменяемый или неизменяемый рассмотрим подробнее функции <code>id()</code> и <code>type()</code>.</p><h2 id="функции-id-и-type" tabindex="-1"><a class="header-anchor" href="#функции-id-и-type" aria-hidden="true">#</a> Функции id и type</h2><p>Встроенная функция <code>id()</code> возвращает числовой идентификатор объекта. Обычно это число соответствует месту нахождения объекта в памяти, однако это относится к особенностям реализации интерпретатора Python и зависит от платформы. Оператор <code>is</code> сравнивает идентификаторы двух объектов.</p><p>Встроенная функция <code>type()</code> возвращает тип объекта. Рассмотрим два примера.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Пример 1</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">=</span> <span class="token string">&quot;Holberton&quot;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> y <span class="token operator">=</span> <span class="token string">&quot;Holberton&quot;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>\n<span class="token number">140135852055856</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>\n<span class="token number">140135852055856</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>x <span class="token keyword">is</span> y<span class="token punctuation">)</span> <span class="token triple-quoted-string string">&#39;&#39;&#39;comparing the types&#39;&#39;&#39;</span>\n<span class="token boolean">True</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># Пример 2</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token number">50</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token keyword">class</span><span class="token punctuation">:</span> ‘<span class="token builtin">int</span>’<span class="token operator">&gt;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b <span class="token operator">=</span> <span class="token string">&quot;Holberton&quot;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">type</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token keyword">class</span><span class="token punctuation">:</span> <span class="token string">&#39;string&#39;</span><span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Проверим, с помощью этих функций, какие типы являются изменяемыми, а какие нет.</p><h2 id="изменяемые-и-неизменяемые-объекты" tabindex="-1"><a class="header-anchor" href="#изменяемые-и-неизменяемые-объекты" aria-hidden="true">#</a> Изменяемые и неизменяемые объекты</h2><p>Изменяемые объекты могут изменять свое состояние или содержимое, неизменяемые не могут. Практический пример проверки на изменяемость:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token number">10</span>\ny <span class="token operator">=</span> x\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Мы создали объект типа <code>int</code>. Идентификаторы <code>x</code> и <code>y</code> ссылаются на один объект.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>\n<span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">id</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Выполним простую операцию:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Теперь</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token builtin">id</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>\n<span class="token builtin">id</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token builtin">id</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Ссылка находящаяся в переменной <code>x</code> изменилась. Изменилась именно ссылка, не сам объект, это показывает изменение идентификатора объекта. Объект <code>10</code> не изменился, переменная <code>y</code> продолжает ссылаться на него. Неизменяемые объекты не меняются после создания.</p><p>В случае изменяемых объектов</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>m <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nn <span class="token operator">=</span> m\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Мы создали объект типа <code>list</code>. Идентификаторы <code>m</code> и <code>n</code> ссылаются на один объект — список из трёх элементов неизменяемого типа <code>int</code>.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token builtin">id</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">id</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Изменим список, удалим один элемент:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>m<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Идентификатор объекта не меняется:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token builtin">id</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">id</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Переменные <code>m</code> и <code>n</code> так же ссылаются на один и тот же объект списка после изменения списка. Список теперь содержит два элемента <code>[1, 2]</code>.</p><p>Особенности изменяемых и неизменяемых объектов:</p><ul><li>Python обрабатывает изменяемые и неизменяемые объекты по-разному.</li><li>Доступ к неизменяемым объектам быстрее чем к изменяемым.</li><li>Изменяемые объекты лучше использовать когда есть необходимость изменять размер или значение объекта после создания. Неизменяемые лучше применять когда объект останется всегда в том виде в котором был создан.</li><li>Неизменяемые объекты принципиально дороже в использовании когда их часто требуется &quot;менять&quot;, так как любое изменение создаёт копию объекта.</li></ul><h2 id="исключения-в-неизменяемости" tabindex="-1"><a class="header-anchor" href="#исключения-в-неизменяемости" aria-hidden="true">#</a> Исключения в неизменяемости</h2><p>В некоторых случаях неизменяемые объекты могут выглядеть как изменяемые.</p><p>Рассмотрим неизменяемый тип кортеж (<code>tuple</code>). Значения кортежа не могут быть изменены после создания. Но значениями кортежа являются последовательность переменных <strong>с неизменяемой привязкой к объектам</strong>. Это ключевой момент, связка объекта и переменной (или ссылка на объект) является неизменяемой, но не сам объект с которым связана переменная.</p><p>Рассмотрим кортеж</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>t <span class="token operator">=</span> <span class="token punctuation">(</span>‘holberton’<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Кортеж <code>t</code> содержит элементы разных типов. Первый элемент это неизменяемая строка, а второй изменяемый список. Кортеж неизменяемый и не содержит методов для изменения своего содержимого. То же самое относится к строке. Но список изменяемый и содержит методы для изменения своих значений. Содержимое неизменяемого кортежа не может быть изменено, но изменяемые объекты входящие в кортеж могут менять свои значения.</p><h2 id="как-объекты-передаются-в-функции" tabindex="-1"><a class="header-anchor" href="#как-объекты-передаются-в-функции" aria-hidden="true">#</a> Как объекты передаются в функции</h2><p>При передачи параметров в функции изменяемые объекты ведут себя аналогично тому что в других языках называется &quot;передача по ссылке&quot;. Изменения объекта внутри функции отражаются на исходном объекте:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">updateList</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    list1 <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>\n\nn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># 17357576</span>\n\nupdateList<span class="token punctuation">(</span>n<span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>                      <span class="token comment"># [5, 6, 10]</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># 17357576</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Неизменяемые объекты ведут себя так как будто происходит &quot;передача по значению&quot;. Изменение объекта внутри функции не влияет на исходных объект:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">updateNumber</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    n <span class="token operator">+=</span> <span class="token number">10</span>\n\nb <span class="token operator">=</span> <span class="token number">5</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>                   <span class="token comment"># 1552410608</span>\n\nupdateNumber<span class="token punctuation">(</span>b<span class="token punctuation">)</span>                <span class="token comment"># 1552410608</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>                       <span class="token comment"># 5</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',44),d={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[(0,p._)("h1",t,[o,(0,p.Uk)(" "+(0,e.zw)(n.$frontmatter.title),1)]),(0,p._)("p",null,[c,(0,p._)("a",l,[i,(0,p.Wm)(a)]),u]),r],64)}}}}]);