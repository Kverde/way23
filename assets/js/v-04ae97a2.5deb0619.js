"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[2295],{71497:(e,l,i)=>{i.r(l),i.d(l,{data:()=>t});const t={key:"v-04ae97a2",path:"/codefest-2019-%D1%80%D0%B5%D1%84%D0%B0%D0%BA%D1%82%D0%BE%D1%80%D0%B8%D0%BD%D0%B3.html",title:"CodeFest 2019. Рефакторинг",lang:"ru-RU",frontmatter:{title:"CodeFest 2019. Рефакторинг",date:"2019-04-02",categories:["Конференции"],tags:["совершенный-код","рефакторинг"]},excerpt:"",headers:[{level:3,title:"Постоянный рефакторинг",slug:"постоянныи-рефакторинг",children:[]},{level:3,title:"Список задач по рефакторингу",slug:"список-задач-по-рефакторингу",children:[]},{level:3,title:"Безупречный код",slug:"безупречныи-код",children:[]},{level:3,title:"Принципы",slug:"принципы",children:[]}],filePathRelative:"codefest-2019-рефакторинг.md",git:{updatedTime:1692859375e3}}},85017:(e,l,i)=>{i.r(l),i.d(l,{default:()=>c});var t=i(66252),a=i(3577);const r={id:"frontmatter-title",tabindex:"-1"},d=(0,t._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),n=(0,t.Uk)("Мой конспект доклада с CodeFest 2019 Алексея Катаева "),u={href:"https://2019.codefest.ru/lecture/1412",target:"_blank",rel:"noopener noreferrer"},h=(0,t.Uk)("Рефакторинг: договариваемся, планируем, внедряем!"),s=(0,t.Uk)(" Доклад был одним из самых полезных среди тех которые я слушал."),p=(0,t.uE)('<h3 id="постоянныи-рефакторинг" tabindex="-1"><a class="header-anchor" href="#постоянныи-рефакторинг" aria-hidden="true">#</a> Постоянный рефакторинг</h3><p>Продукт никогда не следует переписывать с нуля:</p><ul><li>это слишком рискованно и затратно;</li><li>происходит потеря опыта зафиксированного в коде.</li></ul><p>Для того чтобы продукт развивался необходимо применять рефакторинг.</p><p>Нельзя делать рефакторинг тайно. Нужно договорится о том чтобы его делать с руководством или владельцем продукта. Доводы за рефакторинг:</p><ul><li>Без него скорость разработки постепенно снижается.</li><li>Без него стабильность продукта понижается.</li><li>Без него увеличивается время введения в проект новых разработчиков и уменьшается количество тех разработчиков которые вообще хотят работать на проекте.</li></ul><p>Рефакторинг нужно делать постоянно, параллельно с основной разработкой. Важно, что задачи по рефакторингу это именно отдельные задачи, они не являются частью обычных задач.</p><p>В некоторых случаях, компромиссным решением являются <strong>изолированные костыли</strong>, которые не могут влиять на основной код.</p><h3 id="список-задач-по-рефакторингу" tabindex="-1"><a class="header-anchor" href="#список-задач-по-рефакторингу" aria-hidden="true">#</a> Список задач по рефакторингу</h3><p>Для того чтобы управлять процессом рефакторинга удобно иметь список задач связанных с ним. Для того чтобы его получить нужно</p><ul><li>Собрать список проблем по коду со всех разработчиков. Могут использоваться рефакторинг-митапы.</li><li>Список сортируется всеми разработчиками.</li><li>По каждой задаче оценивается время.</li></ul><p>Проблемы фиксируются в специальном формате, который состоит из:</p><ul><li>Описание проблемы</li><li>Какую пользу принесёт решение?</li><li>Вариант решения</li></ul><p>Таким образом получается приоритезированный список задач по уменьшению технического долга с оценкой времени.</p><h3 id="безупречныи-код" tabindex="-1"><a class="header-anchor" href="#безупречныи-код" aria-hidden="true">#</a> Безупречный код</h3><p>Для того чтобы вовлечь всех разработчиков в процесс написания хорошего кода могут применяться следующие инструменты:</p><ul><li>Пицца-клуб — кто-то читает книгу, затем делает доклад по ней. За доклад получает пиццу. Вступление в клуб — по желанию. <ul><li>Может быть организовано в виде семинаров. Читают все, на встрече только обсуждение.</li></ul></li><li>Education day — отдельное время которое можно посвятить обучению. <ul><li>Обязателен отчёт — чему научился и как применял.</li></ul></li></ul><p>Также для того чтобы писать хороший код и делать адекватные оценки нужно знание проекта.</p><h3 id="принципы" tabindex="-1"><a class="header-anchor" href="#принципы" aria-hidden="true">#</a> Принципы</h3><p>Принципы проведения рефакторинга</p><ul><li>Договариваться о его проведении</li><li>Формализовать задачи</li><li>Приоритезировать задачи</li><li>Фиксировать</li></ul>',21),c={render:function(e,l){const i=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t._)("h1",r,[d,(0,t.Uk)(" "+(0,a.zw)(e.$frontmatter.title),1)]),(0,t._)("p",null,[n,(0,t._)("a",u,[h,(0,t.Wm)(i)]),s]),p],64)}}}}]);