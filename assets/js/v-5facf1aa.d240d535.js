"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[9799],{30983:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-5facf1aa",path:"/linux-file.html",title:"Команда file в Linux",lang:"ru-RU",frontmatter:{title:"Команда file в Linux",date:"2023-11-26",categories:["Linux"],tags:["file"]},excerpt:"",headers:[],filePathRelative:"linux-file.md",git:{updatedTime:1700992794e3}}},61698:(s,n,a)=>{a.r(n),a.d(n,{default:()=>c});var e=a(66252),t=a(3577);const p={id:"frontmatter-title",tabindex:"-1"},l=(0,e._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),o=(0,e.uE)('<p>Команда <code>file</code> определяет тип файла. Рассмотрим несколько примеров.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>user@debian-server:~/test$ <span class="token builtin class-name">echo</span> text <span class="token operator">&gt;</span> test.txt\nuser@debian-server:~/test$ <span class="token function">file</span> test.txt\ntest.txt: ASCII text\nuser@debian-server:~/test$ <span class="token builtin class-name">echo</span> кирилица <span class="token operator">&gt;&gt;</span> test.txt \nuser@debian-server:~/test$ <span class="token function">file</span> test.txt\ntest.txt: Unicode text, UTF-8 text\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Добавим в файл <code>file.txt</code> текст</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;JOHN&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;john&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;roles&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sales&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">2</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><code>file</code> верно определить тип файла:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>user@debian-server:~/test$ <span class="token function">file</span> test.txt\ntest.txt: JSON text data\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Ещё пара примеров:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>user@debian-server:~/test$ <span class="token function">file</span> /dev/null \n/dev/null: character special <span class="token punctuation">(</span><span class="token number">1</span>/3<span class="token punctuation">)</span>\nuser@debian-server:~/test$ <span class="token function">file</span> /bin/passwd \n/bin/passwd: setuid ELF <span class="token number">64</span>-bit LSB pie executable, x86-64, version <span class="token number">1</span> <span class="token punctuation">(</span>SYSV<span class="token punctuation">)</span>, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID<span class="token punctuation">[</span>sha1<span class="token punctuation">]</span><span class="token operator">=</span>01ab545446a1b88176d74a89d1ca8151266dfb41, <span class="token keyword">for</span> GNU/Linux <span class="token number">3.2</span>.0, stripped\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Для определения типа файла <code>file</code> происходит в три этапа:</p><ol><li><p>Проверка системной информации о файле, аналогично команде <code>stat</code>. таким способом можно сразу понять тип объектов которые представлены в файловой системе, но, например, являются устройствами. Таким способом определяет тип файла <code>/dev/null</code>.</p></li><li><p>Затем <code>file</code> пытается определить тип файла на основе заданного набора эвристик. Например, по тому, что в определённой позиции файла находится определенные идентификатор.</p></li><li><p>На последнем этапе производится проверка символов, чтобы определить является ли файл текстовым файлом.</p></li></ol><p>Если какой-то этап позволяет точно определить тип файла, то следующие не выполняются.</p><p>С параметром <code>-i</code> команда выдает mime-тип файла:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>user@debian-server:~/test$ <span class="token function">file</span> -i test.txt \ntest.txt: application/json<span class="token punctuation">;</span> <span class="token assign-left variable">charset</span><span class="token operator">=</span>us-ascii\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Попробуем добавить в команду <code>file</code> поддержку своего типа файла. Для этого отредактируем файл <code>/etc/magic</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">nano</span> /etc/magic \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>И добавим в него строку</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>0 string MFF My file format\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Формат файла <code>magic</code> следующий: каждая строка представляет один тест. Сначала идет смещение, потом тип данных которые должны находится по этому смещению, а потом сами данные. Последняя часть — выводимое сообщение.</p><p>Теперь проверим, наполним файл <code>file.txt</code> следующим текстом:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>MFF\n\nThis is my file\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>И проверим:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>user@debian-server:~/test$ <span class="token function">file</span> test.txt \ntest.txt: My <span class="token function">file</span> <span class="token function">format</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',22),c={render:function(s,n){return(0,e.wg)(),(0,e.iD)(e.HY,null,[(0,e._)("h1",p,[l,(0,e.Uk)(" "+(0,t.zw)(s.$frontmatter.title),1)]),o],64)}}}}]);