"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[3034],{99896:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-c8401f7a",path:"/%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0-%D0%BE%D1%81%D0%B2%D0%BE%D0%B1%D0%BE%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D1%8F-%D1%80.html",title:"Правильная обработка освобождения ресурсов через try...finally в Delphi",lang:"ru-RU",frontmatter:{title:"Правильная обработка освобождения ресурсов через try...finally в Delphi",date:"2019-04-20",categories:["Delphi"],tags:["Delphi"]},excerpt:"",headers:[{level:2,title:"Создание одного объекта",slug:"создание-одного-объекта",children:[]},{level:2,title:"Создание нескольких объектов",slug:"создание-нескольких-объектов",children:[]}],filePathRelative:"правильная-обработка-освобождения-р.md",git:{updatedTime:1692859375e3}}},26336:(n,s,e)=>{e.r(s),e.d(s,{default:()=>A});var a=e(66252),r=e(3577);const l={id:"frontmatter-title",tabindex:"-1"},p=(0,a._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),b=(0,a.uE)('<p>Есть много разных вариантов как можно использовать конструкцию <code>try...finally</code> для освобождения ресурсов. Многие из них работают неверно в особых ситуациях. Рассмотрим несколько вариантов подробнее.</p><p>Все рассматриваемые случаи относятся к коду внутри методов, когда переменные объектов являются локальными переменными метода. Для примера рассматривается выделение о освобождение памяти для объектов, но тоже самое может быть применено к другим типам ресурсов.</p><p>Прежде всего, установим <code>ReportMemoryLeaksOnShutdown := True</code> в <code>dpr</code> файле, для того чтобы отслеживать утечки памяти.</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>program Project1;\n\nuses\n  Vcl.Forms,\n  Unit1 in &#39;Unit1.pas&#39; {Form1};\n\n{$R *.res}\n\nbegin\n  ReportMemoryLeaksOnShutdown := True;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="создание-одного-объекта" tabindex="-1"><a class="header-anchor" href="#создание-одного-объекта" aria-hidden="true">#</a> Создание одного объекта</h2><p>Правильная последовательность такая</p><ul><li>Сначала создание объекта и присвоение его переменной</li><li>Работа с объектом в блоке <code>try</code></li><li>Освобождение объекта в блоке <code>finally</code></li></ul><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>type\n  TMyClass = class\n    procedure Start;\n    constructor Create;\n  end;\n\n{ TMyClass }\n\nprocedure TMyClass.Start;\nbegin\n\nend;\n\nconstructor TMyClass.Create;\nbegin\n\nend;\n\nprocedure TForm1.Button1Click(Sender: TObject);\nvar\n  Obj: TMyClass;\nbegin\n  Obj := TMyClass.Create;\n  try\n    Obj.Start;\n  finally\n    FreeAndNil(Obj);\n  end;\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>Принципиально важный момент: блок <code>try</code> начинается <strong>сразу</strong> после создания объекта. Никаких дополнительных действий между ними нет. Рассмотрим ситуацию когда есть какие-то промежуточные действия, внутри них может возникнуть исключение.</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>procedure OtherAction;\nbegin\n  raise Exception.Create(&#39;Big error&#39;);\nend;\n\nprocedure TForm1.Button1Click(Sender: TObject);\nvar\n  Obj: TMyClass;\nbegin\n  Obj := TMyClass.Create;\n  OtherAction; // Исключение, процедура дальше не выполняется, объект Obj не уничтожается. \n  try\n    Obj.Start;\n  finally\n    FreeAndNil(Obj);\n  end;\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>Проверяется утечка довольно просто, запустить приложение, нажать кнопку — появится сообщение об ошибке, закрыть приложение и появится сообщение об утечке памяти. Поэтому <strong>между создание объекта и <code>try</code> не должно быть никаких действий</strong>.</p><p>Рассмотрим ещё одну ситуацию — объект создаётся внутри блока <code>try</code>.</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>procedure TForm1.Button1Click(Sender: TObject);\nvar\n  Obj: TMyClass;\nbegin\n  try\n    Obj := TMyClass.Create;\n    Obj.Start;\n  finally\n    FreeAndNil(Obj);\n  end;\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>В обычной ситуации, всё нормально. Но, предположим, что в конструкторе объекта возникает исключение.</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>constructor TMyClass.Create;\nbegin\n  raise Exception.Create(&#39;Big error&#39;);\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',15),i=(0,a.Uk)("При возникновении исключения в конструкторе автоматически вызывается деструктор (подробнее описано в "),c={href:"https://web.archive.org/web/20180727220321/http://www.delphikingdom.ru/asp/viewitem.asp?catalogid=1392#SubSubHeader_2_6_17",target:"_blank",rel:"noopener noreferrer"},u=(0,a.Uk)("этой статье"),m=(0,a.Uk)(") а затем управление переходит в блок "),d=(0,a._)("code",null,"finally",-1),t=(0,a.Uk)(". Важный момент: присвоения не происходит, значение в "),o=(0,a._)("code",null,"Obj",-1),g=(0,a.Uk)(" не меняется. Так как локальные переменные "),y={href:"http://way23.ru/%D0%B0%D0%B2%D1%82%D0%BE%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F-%D0%B8%D0%BD%D0%B8%D1%86%D0%B8%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F-%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5/",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Uk)("не инициализируются по умолчанию"),O=(0,a.Uk)(", то в "),j=(0,a._)("code",null,"Obj",-1),C=(0,a.Uk)(" находится случайна ссылка. В блоке "),D=(0,a._)("code",null,"finally",-1),v=(0,a.Uk)(" вызывается "),B=(0,a._)("code",null,"FreeAndNil",-1),T=(0,a.Uk)(" в ходе которого вызывается деструктор. Таким образом освобождается память по случайному адресу, что приводит к непредсказуемым последствиям и трудноуловимым ошибкам."),k=(0,a.uE)('<div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>procedure TForm1.Button1Click(Sender: TObject);\nvar\n  Obj: TMyClass; // Obj не инициализируются и содержит случайны адрес\nbegin\n  try\n    Obj := TMyClass.Create; // Исключение, значение obj не меняется, управление передаётся в finally\n    Obj.Start;\n  finally\n    FreeAndNil(Obj); // попытка освобождения памяти по случайному адресу\n  end;\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Поэтому <strong>никогда нельзя создавать объект внутри try если переменная объекта не инициализирована</strong>. Можно дополнительно инициализировать переменную:</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>procedure TForm1.Button1Click(Sender: TObject);\nvar\n  Obj: TMyClass;\nbegin\n  Obj := nil;\n  try\n    Obj := TMyClass.Create;\n    Obj.Start;\n  finally\n    FreeAndNil(Obj);\n  end;\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Но это занимает одну лишнюю строку, не имеет дополнительного смысла. Таким образом правилен только первый описанный вариант.</p><h2 id="создание-нескольких-объектов" tabindex="-1"><a class="header-anchor" href="#создание-нескольких-объектов" aria-hidden="true">#</a> Создание нескольких объектов</h2><p>Ситуация когда создаётся несколько объектов немного сложнее. Рассмотрим создание двух объектов. Самый простой способ — использовать вложенные <code>try</code>, с учётом все описанных выше особенностей:</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>procedure TForm1.Button1Click(Sender: TObject);\nvar\n  Obj1: TMyClass1;\n  Obj2: TMyClass2;\nbegin\n  Obj1 := TMyClass1.Create;\n  try\n    Obj2 := TMyClass2.Create;\n    try\n      Obj1.Start;\n      Obj2.Start;\n    finally\n      FreeAndNil(Obj2);\n    end;\n  finally\n    FreeAndNil(Obj1);\n  end;\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>Такой способ имеет существенный недостаток — постоянно увеличивающийся уровень вложенности, особенно если нужно создать больше 2х объектов.</p><p>Попробуем убрать вложенность</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>procedure TForm1.Button1Click(Sender: TObject);\nvar\n  Obj1: TMyClass1;\n  Obj2: TMyClass2;\nbegin\n  Obj1 := TMyClass1.Create;\n  Obj2 := TMyClass2.Create;\n  try\n    Obj1.Start;\n    Obj2.Start;\n  finally\n    FreeAndNil(Obj1);\n    FreeAndNil(Obj2);\n  end;\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>В обычной ситуации всё работает правильно. Но если исключение возникает в конструкторе второго объекта, то снова получаем утечку памяти.</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>constructor TMyClass2.Create;\nbegin\n  raise Exception.Create(&#39;Big error&#39;);\nend;\n\nprocedure TForm1.Button1Click(Sender: TObject);\nvar\n  Obj1: TMyClass1;\n  Obj2: TMyClass2;\nbegin\n  Obj1 := TMyClass1.Create; // Создаётся объект\n  Obj2 := TMyClass2.Create; // Исключение, метод дальше не выполняется\n  try\n    Obj1.Start;\n    Obj2.Start;\n  finally\n    FreeAndNil(Obj1);\n    FreeAndNil(Obj2);\n  end;\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>Рассмотрим примерно такую же ситуацию, но когда создание двух объектов в блоке <code>try</code>.</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>constructor TMyClass2.Create;\nbegin\n  raise Exception.Create(&#39;Big error&#39;);\nend;\n\nprocedure TForm1.Button1Click(Sender: TObject);\nvar\n  Obj1: TMyClass1;\n  Obj2: TMyClass2;\nbegin\n  try\n    Obj1 := TMyClass1.Create; \n    Obj2 := TMyClass2.Create;\n\n    Obj1.Start;\n    Obj2.Start;\n  finally\n    FreeAndNil(Obj1);\n    FreeAndNil(Obj2);\n  end;\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>Ситуация полностью совпадает с той, что происходит когда один объект создаётся в блоке <code>try</code> — в случае исключения в конструкторе любого из объектов происходит освобождение памяти по случайному адресу.</p><p>В итоге правильный вариант:</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>procedure TForm1.Button1Click(Sender: TObject);\nvar\n  Obj1: TMyClass1;\n  Obj2: TMyClass2;\nbegin\n  Obj1 := nil;\n  Obj2 := nil;\n\n  try\n    Obj1 := TMyClass1.Create;\n    Obj2 := TMyClass2.Create;\n\n    Obj1.Start;\n    Obj2.Start;\n  finally\n    FreeAndNil(Obj1);\n    FreeAndNil(Obj2);\n  end;\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>Сначала происходит инициализация переменных: потом их создание в защищённом блоке. При такой последовательности действий, при любых ситуациях, ресурсы будут освобождены.</p><p><strong>Ссылки:</strong></p>',19),M=(0,a.Uk)("Статья "),f={href:"https://habr.com/ru/post/104377/",target:"_blank",rel:"noopener noreferrer"},F=(0,a.Uk)("Заповеди молодого разработчика Delphi"),S={href:"http://docwiki.embarcadero.com/Libraries/Rio/en/System.ReportMemoryLeaksOnShutdown",target:"_blank",rel:"noopener noreferrer"},_=(0,a.Uk)("Описание"),x=(0,a.Uk)(" ReportMemoryLeaksOnShutdown"),A={render:function(n,s){const e=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[(0,a._)("h1",l,[p,(0,a.Uk)(" "+(0,r.zw)(n.$frontmatter.title),1)]),b,(0,a._)("p",null,[i,(0,a._)("a",c,[u,(0,a.Wm)(e)]),m,d,t,o,g,(0,a._)("a",y,[h,(0,a.Wm)(e)]),O,j,C,D,v,B,T]),k,(0,a._)("ul",null,[(0,a._)("li",null,[M,(0,a._)("a",f,[F,(0,a.Wm)(e)])]),(0,a._)("li",null,[(0,a._)("a",S,[_,(0,a.Wm)(e)]),x])])],64)}}}}]);