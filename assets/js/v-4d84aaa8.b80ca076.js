"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[7218],{53840:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-4d84aaa8",path:"/%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8-python.html",title:"Встроенные математические функции Python",lang:"ru-RU",frontmatter:{title:"Встроенные математические функции Python",date:"2019-11-07",categories:["Python"]},excerpt:"",headers:[{level:2,title:"abs(x)",slug:"abs-x",children:[]},{level:2,title:"pow(base, exp[, mod])",slug:"pow-base-exp-mod",children:[]},{level:2,title:"divmod(a, b)",slug:"divmod-a-b",children:[]},{level:2,title:"round(number[, ndigits])",slug:"round-number-ndigits",children:[]},{level:2,title:"oct(x)",slug:"oct-x",children:[]},{level:2,title:"bin(x)",slug:"bin-x",children:[]},{level:2,title:"hex(x)",slug:"hex-x",children:[]},{level:2,title:"Ссылки",slug:"ссылки",children:[]}],filePathRelative:"встроенные-математические-функции-python.md",git:{updatedTime:1692859375e3}}},71374:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var p=a(66252),t=a(3577);const e={id:"frontmatter-title",tabindex:"-1"},o=(0,p._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),c=(0,p.uE)('<p>Стандартные функции доступные без подключения модулей.</p><h2 id="abs-x" tabindex="-1"><a class="header-anchor" href="#abs-x" aria-hidden="true">#</a> abs(x)</h2><p>Возвращает модуль числа. Аргумент <strong>x</strong> может быть целым (int) или вещественным (float) числом.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>\nb <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2.4</span>\nc <span class="token operator">=</span> <span class="token number">5</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2.4</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 5</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Для комплексных чисел возвращает длину вектора изображающего комплексное число:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>c <span class="token operator">=</span> <span class="token builtin">complex</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">## 5.0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Если <strong>x</strong> определяет метод <code>__abs__()</code>, то <code>abs(x)</code> вернёт <code>x.__abs__()</code>.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        self<span class="token punctuation">.</span>num <span class="token operator">=</span> num\n\n    <span class="token keyword">def</span> <span class="token function">__abs__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token builtin">abs</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>num<span class="token punctuation">)</span>\n\nx <span class="token operator">=</span> MyNumber<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># -10</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="pow-base-exp-mod" tabindex="-1"><a class="header-anchor" href="#pow-base-exp-mod" aria-hidden="true">#</a> pow(base, exp[, mod])</h2><p>Возвращает <strong>base</strong> в степени <strong>exp</strong>:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1024</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment"># 1024</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Допустима отрицательная и вещественная степень:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 0.25</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 8.0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Если указан третий аргумент <strong>mod</strong>, функция вернёт остаток по модулю:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 24</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># 24</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="divmod-a-b" tabindex="-1"><a class="header-anchor" href="#divmod-a-b" aria-hidden="true">#</a> divmod(a, b)</h2><p>Для целых аргументов возвращается кортеж с целочисленным результатом деления и остатком от деления.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">divmod</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># (3, 1) </span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># (3, 1)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="round-number-ndigits" tabindex="-1"><a class="header-anchor" href="#round-number-ndigits" aria-hidden="true">#</a> round(number[, ndigits])</h2><p>Возвращает число округлённое с точностью <strong>ndigits</strong> знаков после запятой.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">2.1234</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2.12</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">2.7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2.7</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Если <strong>ndigits</strong> пропущено или равно <strong>None</strong>, функция возвращает ближайшее к <strong>number</strong> целое число.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">2.11</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">2.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">2.7</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="oct-x" tabindex="-1"><a class="header-anchor" href="#oct-x" aria-hidden="true">#</a> oct(x)</h2><p>Конвертирует целое число в строку с восьмеричным числом с префиксом &quot;0o&quot;.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">oct</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 0o10</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">oct</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">58</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># -0o72</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Если <strong>x</strong> не объект типа <strong>int</strong> то используется метод <code>__index__()</code> возвращающий целое число.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        self<span class="token punctuation">.</span>num <span class="token operator">=</span> num\n\n    <span class="token keyword">def</span> <span class="token function">__index__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token builtin">round</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>num<span class="token punctuation">)</span>\n\nx <span class="token operator">=</span> MyNumber<span class="token punctuation">(</span><span class="token number">9.2</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">oct</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 0o11</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="bin-x" tabindex="-1"><a class="header-anchor" href="#bin-x" aria-hidden="true">#</a> bin(x)</h2><p>Конвертирует целое число в строку с двоичным числом с префиксом &quot;0b&quot;.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 0o1000</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">58</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># -0b111010</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Если <strong>x</strong> не объект типа <strong>int</strong> то используется метод <code>__index__()</code> возвращающий целое число.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        self<span class="token punctuation">.</span>num <span class="token operator">=</span> num\n\n    <span class="token keyword">def</span> <span class="token function">__index__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token builtin">round</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>num<span class="token punctuation">)</span>\n\nx <span class="token operator">=</span> MyNumber<span class="token punctuation">(</span><span class="token number">9.2</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 0b1001</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="hex-x" tabindex="-1"><a class="header-anchor" href="#hex-x" aria-hidden="true">#</a> hex(x)</h2><p>Конвертирует целое число в строку с шестнадцатеричным числом с префиксом &quot;0x&quot;.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 0x100</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">58</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># -0x3a</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Если <strong>x</strong> не объект типа <strong>int</strong> то используется метод <code>__index__()</code> возвращающий целое число.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        self<span class="token punctuation">.</span>num <span class="token operator">=</span> num\n\n    <span class="token keyword">def</span> <span class="token function">__index__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token builtin">round</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>num<span class="token punctuation">)</span>\n\nx <span class="token operator">=</span> MyNumber<span class="token punctuation">(</span><span class="token number">9.2</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 0b1001</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="ссылки" tabindex="-1"><a class="header-anchor" href="#ссылки" aria-hidden="true">#</a> Ссылки</h2>',39),l={href:"https://docs.python.org/3/library/functions.html",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Uk)("Built-in Functions"),i={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[(0,p._)("h1",e,[o,(0,p.Uk)(" "+(0,t.zw)(n.$frontmatter.title),1)]),c,(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("a",l,[u,(0,p.Wm)(a)])])])],64)}}}}]);