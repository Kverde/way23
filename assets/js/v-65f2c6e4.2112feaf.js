"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[8802],{34906:(e,n,l)=>{l.r(n),l.d(n,{data:()=>s});const s={key:"v-65f2c6e4",path:"/%D1%83%D1%81%D0%BB%D0%BE%D0%B2%D0%BD%D0%B0%D1%8F-%D0%BA%D0%BE%D0%BC%D0%BF%D0%B8%D0%BB%D1%8F%D1%86%D0%B8%D1%8F-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-%D1%8F%D0%B7.html",title:"Условная компиляция и возможности языка Delphi",lang:"ru-RU",frontmatter:{title:"Условная компиляция и возможности языка Delphi",date:"2019-05-10",categories:["Delphi"],tags:["Delphi","перевод"]},excerpt:"",headers:[],filePathRelative:"условная-компиляция-и-возможности-яз.md",git:{updatedTime:1692859375e3}}},91403:(e,n,l)=>{l.r(n),l.d(n,{default:()=>_});var s=l(66252),i=l(3577);const r={id:"frontmatter-title",tabindex:"-1"},a=(0,s._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),p=(0,s.Uk)("Вольный перевод поста "),t={href:"https://www.thedelphigeek.com/2015/09/conditional-compilation-with-features.html",target:"_blank",rel:"noopener noreferrer"},o=(0,s.Uk)("Conditional Compilation with Features"),d=(0,s.Uk)("."),c=(0,s.uE)('<p>Вы разрабатываете код который должен работать в разных версиях Delphi? Вы устали от написания примерно такого кода?</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>{$IF CompilerVersion &gt;= 22}\nclass function Mapper&lt;T1,T2&gt;: IMapper&lt;T1,T2&gt;;\n{$ENDIF}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>При этом вы</p><ul><li>никогда не знаете точно когда определённая возможность была введена в Delphi</li><li>всегда сомневаетесь в том какая версия Delphi имеет версию компилятора (CompilerVersion) равную 22</li></ul><p>Вместо написания условий по версии компилятора, вы можете думать в терминах возможностей языка. Код выше требует версию Delphi которая поддерживает обобщённое программирования и содержит реализацию <code>TArray&lt;T&gt;</code>. Так что можно переписать код примерно так</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>{$IFDEF F_Generics}{$IFDEF F_TArrayOfT}\nclass function Mapper&lt;T1,T2&gt;: IMapper&lt;T1,T2&gt;;\n{$ENDIF}{$ENDIF}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Это проще для написания (так как не нужно помнить что в какой версии добавлено) и проще для понимания.</p>',7),u=(0,s.Uk)("Директивы для таких проверок можно подключить из файла "),D={href:"https://github.com/project-jedi/jedi/blob/master/jedi.inc",target:"_blank",rel:"noopener noreferrer"},m=(0,s.Uk)("jedi.inc"),h=(0,s.Uk)(". В этом файле содержатся директивы вида "),b=(0,s._)("code",null,"HAS_XXXXX",-1),B=(0,s.Uk)(" и "),g=(0,s._)("code",null,"SUPPORTS_XXXXX",-1),T=(0,s.Uk)(", например, такие как"),E=(0,s.uE)('<div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>  SUPPORTS_LOCAL                 Compiler supports the local directive (D6+/BCB6+)\n  SUPPORTS_SETPEFLAGS            Compiler supports the SetPEFlags directive (D6+/BCB6+)\n  SUPPORTS_EXPERIMENTAL_WARNINGS Compiler supports the WARN SYMBOL_EXPERIMENTAL and WARN UNIT_EXPERIMENTAL directives (D6+/BCB6+)\n  SUPPORTS_INLINE                Compiler supports the inline directive (D9+/FPC)\n  SUPPORTS_FOR_IN                Compiler supports for in loops (D9+)\n  SUPPORTS_NESTED_CONSTANTS      Compiler supports nested constants (D9+)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',1),_={render:function(e,n){const l=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("h1",r,[a,(0,s.Uk)(" "+(0,i.zw)(e.$frontmatter.title),1)]),(0,s._)("p",null,[p,(0,s._)("a",t,[o,(0,s.Wm)(l)]),d]),c,(0,s._)("p",null,[u,(0,s._)("a",D,[m,(0,s.Wm)(l)]),h,b,B,g,T]),E],64)}}}}]);