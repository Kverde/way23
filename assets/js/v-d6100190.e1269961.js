"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[6684],{82991:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-d6100190",path:"/%D0%B2%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8-python-%D0%B4%D0%BB%D1%8F-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%8B-%D1%81-%D0%BA%D0%BE%D0%BB%D0%BB-2.html",title:"Встроенные функции Python для работы с коллекциями (sorted, filter, zip, reversed, len)",lang:"ru-RU",frontmatter:{title:"Встроенные функции Python для работы с коллекциями (sorted, filter, zip, reversed, len)",date:"2019-11-13",categories:["Python"]},excerpt:"",headers:[{level:2,title:"sorted()",slug:"sorted",children:[]},{level:2,title:"zip(*iterables)",slug:"zip-iterables",children:[]},{level:2,title:"filter(function, iterable)",slug:"filter-function-iterable",children:[]},{level:2,title:"reversed(seq)",slug:"reversed-seq",children:[]},{level:2,title:"len(s)",slug:"len-s",children:[]},{level:2,title:"Ссылки",slug:"ссылки",children:[]}],filePathRelative:"встроенные-функции-python-для-работы-с-колл-2.md",git:{updatedTime:1692859375e3}}},40466:(n,s,a)=>{a.r(s),a.d(s,{default:()=>m});var p=a(66252),e=a(3577);const t={id:"frontmatter-title",tabindex:"-1"},o=(0,p._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),c=(0,p.uE)('<h2 id="sorted" tabindex="-1"><a class="header-anchor" href="#sorted" aria-hidden="true">#</a> sorted()</h2><p>Возвращает новый сортированный список (<strong>list</strong>) из элементов <strong>iterable</strong>.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [0, 2, 5, 6]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Порядок элементов изменяется аргументом <strong>key</strong>. Переданная в <strong>key</strong> функция применяется к каждому элементу. Результат функции используется для определения порядка элементов:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">neg</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> <span class="token operator">-</span>n\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> key <span class="token operator">=</span> neg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [6, 5, 2, 0]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Логический аргумент <strong>reverse</strong> задаёт обратную сортировку:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [6, 5, 2, 0]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',7),l={href:"https://way23.ru/python-%D1%81%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0/",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Uk)("Описание других способов сортировки"),r=(0,p.Uk)("."),i=(0,p.uE)('<h2 id="zip-iterables" tabindex="-1"><a class="header-anchor" href="#zip-iterables" aria-hidden="true">#</a> zip(*iterables)</h2><p>Одновременно перебирает элементы из нескольких итерируемых объектов. Возвращает итератор кортежей, в котором каждый i-тый кортеж содержит i-тый элемент из каждого аргумента.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\nb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\nc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">zip</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment"># (1, 4, 7)</span>\n<span class="token comment"># (2, 5, 8)</span>\n<span class="token comment"># (3, 6, 9)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Перебор заканчивается при завершении самого короткого аргумента:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\nb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\nc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">zip</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment"># (1, 4, 7)</span>\n<span class="token comment"># (2, 5, 8)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>При одном аргументе <strong>zip()</strong> возвращает кортежи из одного элемента:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">zip</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment"># (1,)</span>\n<span class="token comment"># (2,)</span>\n<span class="token comment"># (3,)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>При пустом списке аргументов <strong>zip()</strong> возвращает пустой итератор:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Эквивалентный код на Python:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">zip</span><span class="token punctuation">(</span><span class="token operator">*</span>iterables<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token comment"># zip(&#39;ABCD&#39;, &#39;xy&#39;) --&gt; Ax By</span>\n    sentinel <span class="token operator">=</span> <span class="token builtin">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    iterators <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">iter</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token keyword">for</span> it <span class="token keyword">in</span> iterables<span class="token punctuation">]</span>\n    <span class="token keyword">while</span> iterators<span class="token punctuation">:</span>\n        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n        <span class="token keyword">for</span> it <span class="token keyword">in</span> iterators<span class="token punctuation">:</span>\n            elem <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span>it<span class="token punctuation">,</span> sentinel<span class="token punctuation">)</span>\n            <span class="token keyword">if</span> elem <span class="token keyword">is</span> sentinel<span class="token punctuation">:</span>\n                <span class="token keyword">return</span>\n            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>elem<span class="token punctuation">)</span>\n        <span class="token keyword">yield</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>zip()</strong> используется со списками разных размеров только когда не имеют значения последние элементы самых больших списков. Если эти элементы имеют значение используйте <code>itertools.zip_longest()</code>.</p><p><strong>zip()</strong> вместе с оператором * может использоваться чтобы распаковать (unzip) список:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> zipped <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">list</span><span class="token punctuation">(</span>zipped<span class="token punctuation">)</span>\n<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x2<span class="token punctuation">,</span> y2 <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">zip</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">==</span> <span class="token builtin">list</span><span class="token punctuation">(</span>x2<span class="token punctuation">)</span> <span class="token keyword">and</span> y <span class="token operator">==</span> <span class="token builtin">list</span><span class="token punctuation">(</span>y2<span class="token punctuation">)</span>\n<span class="token boolean">True</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Одновременный перебор двух коллекций:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>\nb <span class="token operator">=</span> <span class="token string">&#39;hel1o&#39;</span>\n\n<span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">if</span> i <span class="token operator">!=</span> j<span class="token punctuation">:</span>\n        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span>\n\n<span class="token comment"># l 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="filter-function-iterable" tabindex="-1"><a class="header-anchor" href="#filter-function-iterable" aria-hidden="true">#</a> filter(function, iterable)</h2><p>Фильтрует элементы, возвращает только те элементы для которых <strong>function</strong> возвращает <strong>True</strong>.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">is_even</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span>\n\na <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">filter</span><span class="token punctuation">(</span>is_even<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment"># 0 2 4 6</span>\n\n<span class="token comment"># эквивалентно генератору</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>item <span class="token keyword">for</span> item <span class="token keyword">in</span> a <span class="token keyword">if</span> is_even<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment"># 0 2 4 6</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Если <strong>function</strong> равен <strong>None</strong> то удаляются все элементы равные <strong>False</strong>:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment"># 1 2 3 4 5 6</span>\n\n<span class="token comment"># эквивалентно генератору</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>item <span class="token keyword">for</span> item <span class="token keyword">in</span> a <span class="token keyword">if</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment"># 1 2 3 4 5 6</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="reversed-seq" tabindex="-1"><a class="header-anchor" href="#reversed-seq" aria-hidden="true">#</a> reversed(seq)</h2><p>Переворачивает последовательность задом наперёд.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">reversed</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 3 2 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>seq</strong> должен быть объектом с методом <code>__reversed__()</code>:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>class MyNumber():\n    def __init__(self, num):\n        self.num = num\n\n    def __reversed__(self):\n        return int(&#39;&#39;.join(reversed(str(self.num))))\n\nx = MyNumber(123)\nprint(reversed(x)) # 321\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>или поддерживать протокол последовательностей: методы <code>__len__()</code> и <code>__getitem__()</code> с целочисленными аргументами начиная с 0.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>\n<span class="token keyword">class</span> <span class="token class-name">MyNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        self<span class="token punctuation">.</span>num <span class="token operator">=</span> num\n\n    <span class="token keyword">def</span> <span class="token function">__len__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">def</span> <span class="token function">__getitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">[</span>item<span class="token punctuation">]</span>\n\nx <span class="token operator">=</span> MyNumber<span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">reversed</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 3 2 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="len-s" tabindex="-1"><a class="header-anchor" href="#len-s" aria-hidden="true">#</a> len(s)</h2><p>Возвращает длину (количество элементов) объекта. Аргумент может быть последовательностью (string, bytes, tuple, list, range) или коллекцией (dictionary, set, frozen set).</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 3</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 2</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 5</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="ссылки" tabindex="-1"><a class="header-anchor" href="#ссылки" aria-hidden="true">#</a> Ссылки</h2>',32),k={href:"https://docs.python.org/3/library/functions.html",target:"_blank",rel:"noopener noreferrer"},b=(0,p.Uk)("Built-in Functions"),m={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[(0,p._)("h1",t,[o,(0,p.Uk)(" "+(0,e.zw)(n.$frontmatter.title),1)]),c,(0,p._)("p",null,[(0,p._)("a",l,[u,(0,p.Wm)(a)]),r]),i,(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("a",k,[b,(0,p.Wm)(a)])])])],64)}}}}]);