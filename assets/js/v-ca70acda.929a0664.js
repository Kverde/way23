"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[6790],{91489:(n,e,a)=>{a.r(e),a.d(e,{data:()=>s});const s={key:"v-ca70acda",path:"/%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80-with-%D0%B8-%D0%B4%D0%B5%D0%BA%D0%BE%D0%BC%D0%BF%D0%BE%D0%B7%D0%B8%D1%86%D0%B8%D1%8F-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%BE%D0%B2.html",title:"Оператор with и декомпозиция методов в Delphi",lang:"ru-RU",frontmatter:{title:"Оператор with и декомпозиция методов в Delphi",date:"2019-07-10",categories:["Delphi"],tags:["Delphi","совершенный-код"]},excerpt:"",headers:[{level:2,title:"Перемещение кода",slug:"перемещение-кода",children:[]},{level:2,title:"Декомпозиция функций",slug:"декомпозиция-функции",children:[]}],filePathRelative:"оператор-with-и-декомпозиция-методов.md",git:{updatedTime:1692859375e3}}},94105:(n,e,a)=>{a.r(e),a.d(e,{default:()=>B});var s=a(66252),r=a(3577);const l={id:"frontmatter-title",tabindex:"-1"},i=(0,s._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),t=(0,s.Uk)("У нас в команде запрещён к использованию оператор "),p=(0,s._)("code",null,"with",-1),c=(0,s.Uk)(". Основная причина в "),b={href:"https://www.transl-gunsmoker.ru/2010/09/with.html",target:"_blank",rel:"noopener noreferrer"},o=(0,s.Uk)("проблемах с надёжность кода с with"),u=(0,s.Uk)(". Существует и другая сторона работы с "),d=(0,s._)("code",null,"with",-1),m=(0,s.Uk)(". Часто его применение указывает на плохую организацию кода и переместив код в более адекватное место оператор "),h=(0,s._)("code",null,"with",-1),D=(0,s.Uk)(" станет просто не нужен. Рассмотрим два примера."),g=(0,s.uE)('<h2 id="перемещение-кода" tabindex="-1"><a class="header-anchor" href="#перемещение-кода" aria-hidden="true">#</a> Перемещение кода</h2><p>Иногда <code>with</code> используется для формы или датамодуля чтобы установить свойства, возможно, вызывать несколько методов.</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>procedure TFrmVrachStac.tbDiagrClick(Sender: TObject);\nvar\n  FormChart: TFormChart;\nbegin\n  FormChart := TFormChart.Create(nil);\n  try\n    with FormChart do\n      begin\n        Caption :=  &#39;Результаты измерений температуры, других исследований и процедур&#39;;\n        LFio.Caption      :=  MTVrachStac.FieldByName(&#39;fio&#39;).AsString;\n        LDATE_B.Caption   :=  MTVrachStac.FieldByName(&#39;date_b&#39;).AsString;\n        LAGE.Caption      :=  MTVrachStac.FieldByName(&#39;age&#39;).AsString;\n        LCHAMBER.Caption  :=  MTVrachStac.FieldByName(&#39;chamb&#39;).AsString;\n        LNIB.Caption      :=  MTVrachStac.FieldByName(&#39;n_map&#39;).AsString;\n        id_ill            :=  mt_id_ill;\n        width   :=  Glob_main_form.Width  - 100;\n        height  :=  Glob_main_form.Height - 150;\n      end;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>В таком случае лучше оформить весь блок кода внутри формы <code>FormChart</code> в виде метода. А вместо <code>with</code> сделать вызов этого метода. Ещё лучше когда у вызыващие формы есть специальный интерфейс (не в смысле типа в Delphi, а в смысле API) через который идёт работа с формой.</p><h2 id="декомпозиция-функции" tabindex="-1"><a class="header-anchor" href="#декомпозиция-функции" aria-hidden="true">#</a> Декомпозиция функций</h2><p>Задача — перебрать все записи в датасете. Код может быть примерно такой</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>procedure TMyForm.MyFunction(ASourceDataSet: TDataSet);\nvar\n  LItem: TPMRItem;\n  Mark1: TBookMark;\nbegin\n  Mark1 := ASourceDataSet.GetBookmark;\n\n  with ASourceDataSet do\n  begin\n    DisableControls;\n    First;\n    try\n      while not eof do\n      begin\n        LItem := TPMRItem.Create;\n        with LItem do\n        begin\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>Оператор <code>with</code> применяется к датасету чтобы не писать его название несколько раз. В тоже самое время этот оператор создаёт лишнюю вложенность, затрудняет чтение, особенно если смотреть только <code>diff</code> в svn. В такой ситуации метод можно разделить на два: один проходит цикл по датасету, другой обрабатывает отдельную запись.</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>procedure TMyForm.MyFunction(ASourceDataSet: TDataSet);\nvar\n  LItem: TPMRItem;\n  Mark1: TBookMark;\nbegin\n  Mark1 := ASourceDataSet.GetBookmark;\n\n  ASourceDataSet.DisableControls;\n  ASourceDataSet.First;\n  try\n    while not ASourceDataSet.eof do\n      ProcessOneRow(ASourceDataSet &lt;...&gt; )\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>В метод <code>ProcessOneRow</code> можно даже не передавать весь датасет а только нужные поля. Таким подходом значительно уменьшается вложенность, <code>with</code> становится не нужен.</p>',10),B={render:function(n,e){const a=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s._)("h1",l,[i,(0,s.Uk)(" "+(0,r.zw)(n.$frontmatter.title),1)]),(0,s._)("p",null,[t,p,c,(0,s._)("a",b,[o,(0,s.Wm)(a)]),u,d,m,h,D]),g],64)}}}}]);