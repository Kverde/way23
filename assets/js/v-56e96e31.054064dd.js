"use strict";(self.webpackChunkway23=self.webpackChunkway23||[]).push([[8038],{90907:(e,s,n)=>{n.r(s),n.d(s,{data:()=>l});const l={key:"v-56e96e31",path:"/pl-sql-developer-4-%D0%BE%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0.html",title:"PL/SQL developer. 4. Отладка",lang:"ru-RU",frontmatter:{title:"PL/SQL developer. 4. Отладка",date:"2019-04-13",categories:["Программы"],tags:["plsql_developer","oracle"]},excerpt:"",headers:[],filePathRelative:"pl-sql-developer-4-отладка.md",git:{updatedTime:1692859375e3}}},97210:(e,s,n)=>{n.r(s),n.d(s,{default:()=>i});var l=n(66252),a=n(3577);const p={id:"frontmatter-title",tabindex:"-1"},r=(0,l._)("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),t=(0,l.uE)('<p>Простой пример использования отладки в Pl/Sql developer. Предположим, нам нужно отладить функцию <code>test.sya_hello</code>.</p><p>Открываем TestWindow и заполняем в нём код для проверки функции.</p><p><img src="images/pl_sql_dev_01.png" alt=""></p><p><img src="images/pl_sql_dev_02.png" alt=""></p><p>Теперь откроем код функции, это можно сделать по ПКМ на имени функции в коде</p><p><img src="images/pl_sql_dev_03.png" alt=""></p><p>На нужной строке ставим точку остановки</p><p><img src="images/pl_sql_dev_04.png" alt=""></p><p><img src="images/pl_sql_dev_05.png" alt=""></p><p>Обязательно нужно проверить что у отлаживаемого объекта добавлена отладочная информация (Add debug information)</p><p><img src="images/pl_sql_dev_06.png" alt=""></p><p>Теперь в TestWindow нажимаем кнопку <strong>Start debugger</strong> или <strong>F9</strong>. Внизу можно указать переменные, значения которых нужно просматривать.</p><p><img src="images/pl_sql_dev_07.png" alt=""></p><p>При нажатии Ctrl+R произойдёт выполнение кода до указанной точки остановки.</p><p><img src="images/pl_sql_dev_08.png" alt=""></p><p>Код функции</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>create or replace function test.say_hello return varchar2 is\n  Result varchar2(100);\nbegin\n  Result := &#39;h&#39;;\n  Result := Result || &#39;e&#39;;\n  Result := Result || &#39;l&#39;;\n  Result := Result || &#39;l&#39;;\n  Result := Result || &#39;o&#39;;  \n  return(Result);\nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Код в TestWindow</p><div class="language-delphi ext-delphi line-numbers-mode"><pre class="language-delphi"><code>declare  \n  str varchar(100);\nbegin\n  str := &#39;azaza&#39;;\n  str := test.say_hello;\n  dbms_output.put_line(str);  \nend;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',19),i={render:function(e,s){return(0,l.wg)(),(0,l.iD)(l.HY,null,[(0,l._)("h1",p,[r,(0,l.Uk)(" "+(0,a.zw)(e.$frontmatter.title),1)]),t],64)}}}}]);